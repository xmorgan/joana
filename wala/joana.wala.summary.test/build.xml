<?xml version="1.0" encoding="UTF-8"?>
<project name="joana.api" default="fulljar" basedir=".">
	<description>
		ifc api standalone jar
	</description>

	<!-- set project related properties -->
	<property file="project.properties" />
	<property name="projectname" value="joana.wala.summary.test" />
	<!-- set global properties for this build -->
	<property file="${joana.base.dir}/joana-project-location.properties" />

	<property name="dest.dir" value="${joana.dist.dir}/${projectname}" />
	<property name="dest.dir.sources" location="${dest.dir}/sources" />
	<property name="dest.dir.classes" location="${dest.dir}/classes" />

	<property name="main.class" value="edu.kit.joana.wala.summary.test.Test" />

	<target name="fulljar" depends="compile,spill_out_jars,copy_non_java_files" description="generate the stand-alone jar file">
		<delete file="${joana.dist.dir}/${projectname}.jar" />
		<jar jarfile="${joana.dist.dir}/${projectname}.jar">
			<fileset dir="${dest.dir.classes}">
				<not>
					<or>
						<filename name="**/package.html" />
						<filename name="**/doc-files/**/*" />
						<filename name="**/META-INF/**/*" />
					</or>
				</not>
			</fileset>
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
			</manifest>
		</jar>
	</target>

	<target name="make-source-dist" depends="init,collect_wala_sources,collect_sources,spill_out_jars,copy_non_java_files" description="generate a zip file containing all the source code">
		<delete file="${joana.dist.dir}/${projectname}-src.zip" />
		<zip destfile="${joana.dist.dir}/${projectname}-src.zip">
			<fileset dir="${dest.dir.sources}">
				<not>
					<or>
						<filename name="**/package.html" />
						<filename name="**/doc-files/**/*" />
						<filename name="**/META-INF/**/*" />
					</or>
				</not>
			</fileset>
		</zip>
	</target>


	<target name="compile" depends="init,collect_wala_sources,collect_sources">
		<path id="lib.path.ref">
			<fileset dir="${joana.contrib.base.dir}" includes="*.jar" />
			<fileset dir="${joana.base.dir}/contrib/parameter-setter/build/libs" includes="parameter_setter-all-1.0-SNAPSHOT.jar" />
			<fileset dir="${joana.base.dir}/contrib/wala/com.ibm.wala.cast/lib" includes="*.jar" />
			<pathelement path="${dest.dir.classes}" />
		</path>
		<typedef resource="org/jetbrains/kotlin/ant/antlib.xml" classpath="${kotlin.lib}/kotlin-ant.jar"/>
		<javac
				includeantruntime="false"
				srcdir="${dest.dir.sources}"
				destdir="${dest.dir.classes}"
				verbose="no"
				source="1.8"
				target="1.8"
				encoding="utf-8"
				classpathref="lib.path.ref"
				debug="true"
				debuglevel="vars,lines,source"
		><withKotlin/></javac>
	</target>

	<target name="spill_out_jars">
		<unjar dest="${dest.dir.classes}">
			<fileset dir="${joana.contrib.base.dir}">
				<filename name="*.jar" />
			</fileset>
			<fileset dir="${joana.base.dir}/contrib/wala/com.ibm.wala.cast/lib">
				<filename name="*.jar" />
			</fileset>
			<fileset dir="${kotlin.lib}">
				<filename name="kotlin-stdlib.jar" />
			</fileset>
			<fileset dir="${joana.base.dir}/contrib/parameter-setter/build/libs">
				<filename name="parameter_setter-all-1.0-SNAPSHOT.jar" />
			</fileset>
		</unjar>
	</target>

	<target name="protoc">
		<exec executable="/bin/bash">
			<arg value="../joana.wala.summary/build_protobuf.sh"/>
		</exec>
	</target>

  <!--	<target name="cpp" depends="protoc">
		<exec executable="/bin/bash">
			<arg value="../joana.wala.summary/cpp/build.sh"/>
		</exec>
  </target>-->

	<target name="init" depends="clean">
		<delete dir="${dest.dir}" />
		<mkdir dir="${dest.dir}" />
		<mkdir dir="${dest.dir.sources}" />
		<mkdir dir="${dest.dir.classes}" />
		<mkdir dir="${dest.dir.classes}/stubs" />
	</target>

	<target name="copy_non_java_files">
		<copy todir="${dest.dir.classes}">
			<filelist dir="${joana.api.base.dir}">
				<file name="git-commit"/>
			</filelist>
			<filelist dir="${com.ibm.wala.core.base.dir}/dat">
				<file name="primordial.txt" />
			</filelist>
			<filelist dir="${com.ibm.wala.core.base.dir}/lib">
				<file name="primordial.jar.model" />
			</filelist>
			<filelist dir="${joana.contrib.base.dir}/res">
				<file name="natives_empty.xml" />
				<file name="natives.xml" />
			</filelist>
		</copy>
		<copy todir="${dest.dir.classes}/stubs">
			<filelist dir="${joana.contrib.base.dir}/stubs">
				<file name="jSDG-stubs-jre1.4.jar" />
				<file name="jSDG-stubs-jre1.5.jar" />
				<file name="jSDG-stubs-javacard.jar" />
				<file name="jSDG-stubs-j2me2.0.jar" />
				<file name="jdk-1.5-with-stubs.jar" />
				<file name="jdk-1.6-with-stubs.jar" />
				<file name="jdk-1.7-with-stubs.jar" />
			</filelist>
		</copy>
	</target>

	<target name="collect_wala_sources">
		<copy todir="${dest.dir.sources}">
			<fileset dir="${com.ibm.wala.core.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${com.ibm.wala.shrike.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<!--
                Needed for optional second type-inference. This is needed for replacing
                variable-names in the generated SDG-file
             -->
			<fileset dir="${com.ibm.wala.cast.base.dir}/source">
				<and>
					<filename name="**/*.java" />
					<not>
						<or>
							<filename name="**/plugin/**/*.java" />
							<filename name="**/*Plugin*.java" />
						</or>
					</not>
				</and>
			</fileset>
			<fileset dir="${com.ibm.wala.util.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="collect_sources" depends="protoc">
		<copy todir="${dest.dir.sources}">
			<!-- joana.contrib -->
			<fileset dir="${joana.contrib.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<!-- joana.util -->
			<fileset dir="${joana.util.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<!-- joana.wala code -->
			<fileset dir="${joana.wala.core.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.wala.flowless.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.wala.summary.base.dir}/src">
				<filename name="**/*" />
			</fileset>
			<fileset dir="${joana.wala.util.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<!-- joana.ifc code -->
			<fileset dir="${joana.ifc.sdg.core.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.ifc.sdg.irlsod.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.ifc.sdg.graph.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.ifc.sdg.mhpoptimization.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.ifc.sdg.util.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.ui.annotations.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<!-- joana.api code -->
			<fileset dir="${joana.api.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.api.testdata.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.wala.summary.test.base.dir}/src">
				<filename name="**/*" />
			</fileset>
			<fileset dir="${joana.api.annotations.ignore.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.api.annotations.passon.base.dir}/src">
				<filename name="**/*.java" />
			</fileset>
			<fileset dir="${joana.ifc.sdg.qifc.nildumu.dir}/src">
				<filename name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="clean">
		<delete dir="${dest.dir}" />
	</target>

	<target name="full_clean" depends="clean">
		<delete file="${joana.dist.dir}/${projectname}.jar" />
	</target>

</project>
