// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/graph.proto

package edu.kit.joana.wala.summary.parex;

public final class GraphProto {
  private GraphProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code parex.graph.NodeHeader}
   */
  public enum NodeHeader
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <code>CALL_NODE = 1;</code>
     */
    CALL_NODE(1),
    /**
     * <code>FUNC_NODE = 2;</code>
     */
    FUNC_NODE(2),
    /**
     * <code>ACTUAL_IN_NODE = 3;</code>
     */
    ACTUAL_IN_NODE(3),
    /**
     * <code>ACTUAL_OUT_NODE = 4;</code>
     */
    ACTUAL_OUT_NODE(4),
    /**
     * <code>FORMAL_IN_NODE = 5;</code>
     */
    FORMAL_IN_NODE(5),
    /**
     * <code>FORMAL_OUT_NODE = 6;</code>
     */
    FORMAL_OUT_NODE(6),
    /**
     * <code>NORMAL_NODE = 7;</code>
     */
    NORMAL_NODE(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <code>CALL_NODE = 1;</code>
     */
    public static final int CALL_NODE_VALUE = 1;
    /**
     * <code>FUNC_NODE = 2;</code>
     */
    public static final int FUNC_NODE_VALUE = 2;
    /**
     * <code>ACTUAL_IN_NODE = 3;</code>
     */
    public static final int ACTUAL_IN_NODE_VALUE = 3;
    /**
     * <code>ACTUAL_OUT_NODE = 4;</code>
     */
    public static final int ACTUAL_OUT_NODE_VALUE = 4;
    /**
     * <code>FORMAL_IN_NODE = 5;</code>
     */
    public static final int FORMAL_IN_NODE_VALUE = 5;
    /**
     * <code>FORMAL_OUT_NODE = 6;</code>
     */
    public static final int FORMAL_OUT_NODE_VALUE = 6;
    /**
     * <code>NORMAL_NODE = 7;</code>
     */
    public static final int NORMAL_NODE_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NodeHeader valueOf(int value) {
      return forNumber(value);
    }

    public static NodeHeader forNumber(int value) {
      switch (value) {
        case 0: return NONE;
        case 1: return CALL_NODE;
        case 2: return FUNC_NODE;
        case 3: return ACTUAL_IN_NODE;
        case 4: return ACTUAL_OUT_NODE;
        case 5: return FORMAL_IN_NODE;
        case 6: return FORMAL_OUT_NODE;
        case 7: return NORMAL_NODE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NodeHeader>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        NodeHeader> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NodeHeader>() {
            public NodeHeader findValueByNumber(int number) {
              return NodeHeader.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final NodeHeader[] VALUES = values();

    public static NodeHeader valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private NodeHeader(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:parex.graph.NodeHeader)
  }

  public interface GraphHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:parex.graph.GraphHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 entry = 1;</code>
     */
    int getEntry();

    /**
     * <code>int32 number_of_nodes = 2;</code>
     */
    int getNumberOfNodes();

    /**
     * <code>int32 number_of_functions = 3;</code>
     */
    int getNumberOfFunctions();

    /**
     * <code>int32 node_header_bytes = 4;</code>
     */
    int getNodeHeaderBytes();
  }
  /**
   * Protobuf type {@code parex.graph.GraphHeader}
   */
  public  static final class GraphHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:parex.graph.GraphHeader)
      GraphHeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GraphHeader.newBuilder() to construct.
    private GraphHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GraphHeader() {
      entry_ = 0;
      numberOfNodes_ = 0;
      numberOfFunctions_ = 0;
      nodeHeaderBytes_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GraphHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              entry_ = input.readInt32();
              break;
            }
            case 16: {

              numberOfNodes_ = input.readInt32();
              break;
            }
            case 24: {

              numberOfFunctions_ = input.readInt32();
              break;
            }
            case 32: {

              nodeHeaderBytes_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_GraphHeader_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_GraphHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader.class, edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader.Builder.class);
    }

    public static final int ENTRY_FIELD_NUMBER = 1;
    private int entry_;
    /**
     * <code>int32 entry = 1;</code>
     */
    public int getEntry() {
      return entry_;
    }

    public static final int NUMBER_OF_NODES_FIELD_NUMBER = 2;
    private int numberOfNodes_;
    /**
     * <code>int32 number_of_nodes = 2;</code>
     */
    public int getNumberOfNodes() {
      return numberOfNodes_;
    }

    public static final int NUMBER_OF_FUNCTIONS_FIELD_NUMBER = 3;
    private int numberOfFunctions_;
    /**
     * <code>int32 number_of_functions = 3;</code>
     */
    public int getNumberOfFunctions() {
      return numberOfFunctions_;
    }

    public static final int NODE_HEADER_BYTES_FIELD_NUMBER = 4;
    private int nodeHeaderBytes_;
    /**
     * <code>int32 node_header_bytes = 4;</code>
     */
    public int getNodeHeaderBytes() {
      return nodeHeaderBytes_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (entry_ != 0) {
        output.writeInt32(1, entry_);
      }
      if (numberOfNodes_ != 0) {
        output.writeInt32(2, numberOfNodes_);
      }
      if (numberOfFunctions_ != 0) {
        output.writeInt32(3, numberOfFunctions_);
      }
      if (nodeHeaderBytes_ != 0) {
        output.writeInt32(4, nodeHeaderBytes_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (entry_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, entry_);
      }
      if (numberOfNodes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numberOfNodes_);
      }
      if (numberOfFunctions_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, numberOfFunctions_);
      }
      if (nodeHeaderBytes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, nodeHeaderBytes_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader)) {
        return super.equals(obj);
      }
      edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader other = (edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader) obj;

      boolean result = true;
      result = result && (getEntry()
          == other.getEntry());
      result = result && (getNumberOfNodes()
          == other.getNumberOfNodes());
      result = result && (getNumberOfFunctions()
          == other.getNumberOfFunctions());
      result = result && (getNodeHeaderBytes()
          == other.getNodeHeaderBytes());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ENTRY_FIELD_NUMBER;
      hash = (53 * hash) + getEntry();
      hash = (37 * hash) + NUMBER_OF_NODES_FIELD_NUMBER;
      hash = (53 * hash) + getNumberOfNodes();
      hash = (37 * hash) + NUMBER_OF_FUNCTIONS_FIELD_NUMBER;
      hash = (53 * hash) + getNumberOfFunctions();
      hash = (37 * hash) + NODE_HEADER_BYTES_FIELD_NUMBER;
      hash = (53 * hash) + getNodeHeaderBytes();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code parex.graph.GraphHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:parex.graph.GraphHeader)
        edu.kit.joana.wala.summary.parex.GraphProto.GraphHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_GraphHeader_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_GraphHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader.class, edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader.Builder.class);
      }

      // Construct using edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        entry_ = 0;

        numberOfNodes_ = 0;

        numberOfFunctions_ = 0;

        nodeHeaderBytes_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_GraphHeader_descriptor;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader getDefaultInstanceForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader.getDefaultInstance();
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader build() {
        edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader buildPartial() {
        edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader result = new edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader(this);
        result.entry_ = entry_;
        result.numberOfNodes_ = numberOfNodes_;
        result.numberOfFunctions_ = numberOfFunctions_;
        result.nodeHeaderBytes_ = nodeHeaderBytes_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader) {
          return mergeFrom((edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader other) {
        if (other == edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader.getDefaultInstance()) return this;
        if (other.getEntry() != 0) {
          setEntry(other.getEntry());
        }
        if (other.getNumberOfNodes() != 0) {
          setNumberOfNodes(other.getNumberOfNodes());
        }
        if (other.getNumberOfFunctions() != 0) {
          setNumberOfFunctions(other.getNumberOfFunctions());
        }
        if (other.getNodeHeaderBytes() != 0) {
          setNodeHeaderBytes(other.getNodeHeaderBytes());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int entry_ ;
      /**
       * <code>int32 entry = 1;</code>
       */
      public int getEntry() {
        return entry_;
      }
      /**
       * <code>int32 entry = 1;</code>
       */
      public Builder setEntry(int value) {
        
        entry_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 entry = 1;</code>
       */
      public Builder clearEntry() {
        
        entry_ = 0;
        onChanged();
        return this;
      }

      private int numberOfNodes_ ;
      /**
       * <code>int32 number_of_nodes = 2;</code>
       */
      public int getNumberOfNodes() {
        return numberOfNodes_;
      }
      /**
       * <code>int32 number_of_nodes = 2;</code>
       */
      public Builder setNumberOfNodes(int value) {
        
        numberOfNodes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 number_of_nodes = 2;</code>
       */
      public Builder clearNumberOfNodes() {
        
        numberOfNodes_ = 0;
        onChanged();
        return this;
      }

      private int numberOfFunctions_ ;
      /**
       * <code>int32 number_of_functions = 3;</code>
       */
      public int getNumberOfFunctions() {
        return numberOfFunctions_;
      }
      /**
       * <code>int32 number_of_functions = 3;</code>
       */
      public Builder setNumberOfFunctions(int value) {
        
        numberOfFunctions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 number_of_functions = 3;</code>
       */
      public Builder clearNumberOfFunctions() {
        
        numberOfFunctions_ = 0;
        onChanged();
        return this;
      }

      private int nodeHeaderBytes_ ;
      /**
       * <code>int32 node_header_bytes = 4;</code>
       */
      public int getNodeHeaderBytes() {
        return nodeHeaderBytes_;
      }
      /**
       * <code>int32 node_header_bytes = 4;</code>
       */
      public Builder setNodeHeaderBytes(int value) {
        
        nodeHeaderBytes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_header_bytes = 4;</code>
       */
      public Builder clearNodeHeaderBytes() {
        
        nodeHeaderBytes_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:parex.graph.GraphHeader)
    }

    // @@protoc_insertion_point(class_scope:parex.graph.GraphHeader)
    private static final edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader();
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphHeader>
        PARSER = new com.google.protobuf.AbstractParser<GraphHeader>() {
      @java.lang.Override
      public GraphHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GraphHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GraphHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphHeader> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.kit.joana.wala.summary.parex.GraphProto.GraphHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CallNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:parex.graph.CallNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 actual_ins = 1;</code>
     */
    java.util.List<java.lang.Integer> getActualInsList();
    /**
     * <code>repeated int32 actual_ins = 1;</code>
     */
    int getActualInsCount();
    /**
     * <code>repeated int32 actual_ins = 1;</code>
     */
    int getActualIns(int index);

    /**
     * <code>repeated int32 actual_outs = 2;</code>
     */
    java.util.List<java.lang.Integer> getActualOutsList();
    /**
     * <code>repeated int32 actual_outs = 2;</code>
     */
    int getActualOutsCount();
    /**
     * <code>repeated int32 actual_outs = 2;</code>
     */
    int getActualOuts(int index);

    /**
     * <pre>
     * id of the owning function
     * </pre>
     *
     * <code>int32 owner = 3;</code>
     */
    int getOwner();

    /**
     * <pre>
     * ids of the targeted functions
     * </pre>
     *
     * <code>repeated int32 targets = 4;</code>
     */
    java.util.List<java.lang.Integer> getTargetsList();
    /**
     * <pre>
     * ids of the targeted functions
     * </pre>
     *
     * <code>repeated int32 targets = 4;</code>
     */
    int getTargetsCount();
    /**
     * <pre>
     * ids of the targeted functions
     * </pre>
     *
     * <code>repeated int32 targets = 4;</code>
     */
    int getTargets(int index);

    /**
     * <code>repeated int32 neighbors = 6;</code>
     */
    java.util.List<java.lang.Integer> getNeighborsList();
    /**
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighborsCount();
    /**
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighbors(int index);
  }
  /**
   * Protobuf type {@code parex.graph.CallNode}
   */
  public  static final class CallNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:parex.graph.CallNode)
      CallNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CallNode.newBuilder() to construct.
    private CallNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CallNode() {
      actualIns_ = java.util.Collections.emptyList();
      actualOuts_ = java.util.Collections.emptyList();
      owner_ = 0;
      targets_ = java.util.Collections.emptyList();
      neighbors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CallNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                actualIns_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              actualIns_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                actualIns_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                actualIns_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                actualOuts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              actualOuts_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                actualOuts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                actualOuts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {

              owner_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                targets_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              targets_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                targets_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                targets_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              neighbors_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                neighbors_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          actualIns_ = java.util.Collections.unmodifiableList(actualIns_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          actualOuts_ = java.util.Collections.unmodifiableList(actualOuts_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          targets_ = java.util.Collections.unmodifiableList(targets_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_CallNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_CallNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.kit.joana.wala.summary.parex.GraphProto.CallNode.class, edu.kit.joana.wala.summary.parex.GraphProto.CallNode.Builder.class);
    }

    private int bitField0_;
    public static final int ACTUAL_INS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> actualIns_;
    /**
     * <code>repeated int32 actual_ins = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getActualInsList() {
      return actualIns_;
    }
    /**
     * <code>repeated int32 actual_ins = 1;</code>
     */
    public int getActualInsCount() {
      return actualIns_.size();
    }
    /**
     * <code>repeated int32 actual_ins = 1;</code>
     */
    public int getActualIns(int index) {
      return actualIns_.get(index);
    }
    private int actualInsMemoizedSerializedSize = -1;

    public static final int ACTUAL_OUTS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> actualOuts_;
    /**
     * <code>repeated int32 actual_outs = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getActualOutsList() {
      return actualOuts_;
    }
    /**
     * <code>repeated int32 actual_outs = 2;</code>
     */
    public int getActualOutsCount() {
      return actualOuts_.size();
    }
    /**
     * <code>repeated int32 actual_outs = 2;</code>
     */
    public int getActualOuts(int index) {
      return actualOuts_.get(index);
    }
    private int actualOutsMemoizedSerializedSize = -1;

    public static final int OWNER_FIELD_NUMBER = 3;
    private int owner_;
    /**
     * <pre>
     * id of the owning function
     * </pre>
     *
     * <code>int32 owner = 3;</code>
     */
    public int getOwner() {
      return owner_;
    }

    public static final int TARGETS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> targets_;
    /**
     * <pre>
     * ids of the targeted functions
     * </pre>
     *
     * <code>repeated int32 targets = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getTargetsList() {
      return targets_;
    }
    /**
     * <pre>
     * ids of the targeted functions
     * </pre>
     *
     * <code>repeated int32 targets = 4;</code>
     */
    public int getTargetsCount() {
      return targets_.size();
    }
    /**
     * <pre>
     * ids of the targeted functions
     * </pre>
     *
     * <code>repeated int32 targets = 4;</code>
     */
    public int getTargets(int index) {
      return targets_.get(index);
    }
    private int targetsMemoizedSerializedSize = -1;

    public static final int NEIGHBORS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> neighbors_;
    /**
     * <code>repeated int32 neighbors = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getNeighborsList() {
      return neighbors_;
    }
    /**
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighborsCount() {
      return neighbors_.size();
    }
    /**
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighbors(int index) {
      return neighbors_.get(index);
    }
    private int neighborsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getActualInsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(actualInsMemoizedSerializedSize);
      }
      for (int i = 0; i < actualIns_.size(); i++) {
        output.writeInt32NoTag(actualIns_.get(i));
      }
      if (getActualOutsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(actualOutsMemoizedSerializedSize);
      }
      for (int i = 0; i < actualOuts_.size(); i++) {
        output.writeInt32NoTag(actualOuts_.get(i));
      }
      if (owner_ != 0) {
        output.writeInt32(3, owner_);
      }
      if (getTargetsList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(targetsMemoizedSerializedSize);
      }
      for (int i = 0; i < targets_.size(); i++) {
        output.writeInt32NoTag(targets_.get(i));
      }
      if (getNeighborsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(neighborsMemoizedSerializedSize);
      }
      for (int i = 0; i < neighbors_.size(); i++) {
        output.writeInt32NoTag(neighbors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < actualIns_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(actualIns_.get(i));
        }
        size += dataSize;
        if (!getActualInsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        actualInsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < actualOuts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(actualOuts_.get(i));
        }
        size += dataSize;
        if (!getActualOutsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        actualOutsMemoizedSerializedSize = dataSize;
      }
      if (owner_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, owner_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < targets_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(targets_.get(i));
        }
        size += dataSize;
        if (!getTargetsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        targetsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < neighbors_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(neighbors_.get(i));
        }
        size += dataSize;
        if (!getNeighborsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        neighborsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.kit.joana.wala.summary.parex.GraphProto.CallNode)) {
        return super.equals(obj);
      }
      edu.kit.joana.wala.summary.parex.GraphProto.CallNode other = (edu.kit.joana.wala.summary.parex.GraphProto.CallNode) obj;

      boolean result = true;
      result = result && getActualInsList()
          .equals(other.getActualInsList());
      result = result && getActualOutsList()
          .equals(other.getActualOutsList());
      result = result && (getOwner()
          == other.getOwner());
      result = result && getTargetsList()
          .equals(other.getTargetsList());
      result = result && getNeighborsList()
          .equals(other.getNeighborsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getActualInsCount() > 0) {
        hash = (37 * hash) + ACTUAL_INS_FIELD_NUMBER;
        hash = (53 * hash) + getActualInsList().hashCode();
      }
      if (getActualOutsCount() > 0) {
        hash = (37 * hash) + ACTUAL_OUTS_FIELD_NUMBER;
        hash = (53 * hash) + getActualOutsList().hashCode();
      }
      hash = (37 * hash) + OWNER_FIELD_NUMBER;
      hash = (53 * hash) + getOwner();
      if (getTargetsCount() > 0) {
        hash = (37 * hash) + TARGETS_FIELD_NUMBER;
        hash = (53 * hash) + getTargetsList().hashCode();
      }
      if (getNeighborsCount() > 0) {
        hash = (37 * hash) + NEIGHBORS_FIELD_NUMBER;
        hash = (53 * hash) + getNeighborsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.kit.joana.wala.summary.parex.GraphProto.CallNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code parex.graph.CallNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:parex.graph.CallNode)
        edu.kit.joana.wala.summary.parex.GraphProto.CallNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_CallNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_CallNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.kit.joana.wala.summary.parex.GraphProto.CallNode.class, edu.kit.joana.wala.summary.parex.GraphProto.CallNode.Builder.class);
      }

      // Construct using edu.kit.joana.wala.summary.parex.GraphProto.CallNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        actualIns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        actualOuts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        owner_ = 0;

        targets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_CallNode_descriptor;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.CallNode getDefaultInstanceForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.CallNode.getDefaultInstance();
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.CallNode build() {
        edu.kit.joana.wala.summary.parex.GraphProto.CallNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.CallNode buildPartial() {
        edu.kit.joana.wala.summary.parex.GraphProto.CallNode result = new edu.kit.joana.wala.summary.parex.GraphProto.CallNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          actualIns_ = java.util.Collections.unmodifiableList(actualIns_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.actualIns_ = actualIns_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          actualOuts_ = java.util.Collections.unmodifiableList(actualOuts_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.actualOuts_ = actualOuts_;
        result.owner_ = owner_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          targets_ = java.util.Collections.unmodifiableList(targets_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.targets_ = targets_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.neighbors_ = neighbors_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.kit.joana.wala.summary.parex.GraphProto.CallNode) {
          return mergeFrom((edu.kit.joana.wala.summary.parex.GraphProto.CallNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.kit.joana.wala.summary.parex.GraphProto.CallNode other) {
        if (other == edu.kit.joana.wala.summary.parex.GraphProto.CallNode.getDefaultInstance()) return this;
        if (!other.actualIns_.isEmpty()) {
          if (actualIns_.isEmpty()) {
            actualIns_ = other.actualIns_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureActualInsIsMutable();
            actualIns_.addAll(other.actualIns_);
          }
          onChanged();
        }
        if (!other.actualOuts_.isEmpty()) {
          if (actualOuts_.isEmpty()) {
            actualOuts_ = other.actualOuts_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureActualOutsIsMutable();
            actualOuts_.addAll(other.actualOuts_);
          }
          onChanged();
        }
        if (other.getOwner() != 0) {
          setOwner(other.getOwner());
        }
        if (!other.targets_.isEmpty()) {
          if (targets_.isEmpty()) {
            targets_ = other.targets_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTargetsIsMutable();
            targets_.addAll(other.targets_);
          }
          onChanged();
        }
        if (!other.neighbors_.isEmpty()) {
          if (neighbors_.isEmpty()) {
            neighbors_ = other.neighbors_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureNeighborsIsMutable();
            neighbors_.addAll(other.neighbors_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.kit.joana.wala.summary.parex.GraphProto.CallNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.kit.joana.wala.summary.parex.GraphProto.CallNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> actualIns_ = java.util.Collections.emptyList();
      private void ensureActualInsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          actualIns_ = new java.util.ArrayList<java.lang.Integer>(actualIns_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 actual_ins = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getActualInsList() {
        return java.util.Collections.unmodifiableList(actualIns_);
      }
      /**
       * <code>repeated int32 actual_ins = 1;</code>
       */
      public int getActualInsCount() {
        return actualIns_.size();
      }
      /**
       * <code>repeated int32 actual_ins = 1;</code>
       */
      public int getActualIns(int index) {
        return actualIns_.get(index);
      }
      /**
       * <code>repeated int32 actual_ins = 1;</code>
       */
      public Builder setActualIns(
          int index, int value) {
        ensureActualInsIsMutable();
        actualIns_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actual_ins = 1;</code>
       */
      public Builder addActualIns(int value) {
        ensureActualInsIsMutable();
        actualIns_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actual_ins = 1;</code>
       */
      public Builder addAllActualIns(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActualInsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, actualIns_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actual_ins = 1;</code>
       */
      public Builder clearActualIns() {
        actualIns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> actualOuts_ = java.util.Collections.emptyList();
      private void ensureActualOutsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          actualOuts_ = new java.util.ArrayList<java.lang.Integer>(actualOuts_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 actual_outs = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getActualOutsList() {
        return java.util.Collections.unmodifiableList(actualOuts_);
      }
      /**
       * <code>repeated int32 actual_outs = 2;</code>
       */
      public int getActualOutsCount() {
        return actualOuts_.size();
      }
      /**
       * <code>repeated int32 actual_outs = 2;</code>
       */
      public int getActualOuts(int index) {
        return actualOuts_.get(index);
      }
      /**
       * <code>repeated int32 actual_outs = 2;</code>
       */
      public Builder setActualOuts(
          int index, int value) {
        ensureActualOutsIsMutable();
        actualOuts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actual_outs = 2;</code>
       */
      public Builder addActualOuts(int value) {
        ensureActualOutsIsMutable();
        actualOuts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actual_outs = 2;</code>
       */
      public Builder addAllActualOuts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActualOutsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, actualOuts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actual_outs = 2;</code>
       */
      public Builder clearActualOuts() {
        actualOuts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int owner_ ;
      /**
       * <pre>
       * id of the owning function
       * </pre>
       *
       * <code>int32 owner = 3;</code>
       */
      public int getOwner() {
        return owner_;
      }
      /**
       * <pre>
       * id of the owning function
       * </pre>
       *
       * <code>int32 owner = 3;</code>
       */
      public Builder setOwner(int value) {
        
        owner_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id of the owning function
       * </pre>
       *
       * <code>int32 owner = 3;</code>
       */
      public Builder clearOwner() {
        
        owner_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> targets_ = java.util.Collections.emptyList();
      private void ensureTargetsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          targets_ = new java.util.ArrayList<java.lang.Integer>(targets_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * ids of the targeted functions
       * </pre>
       *
       * <code>repeated int32 targets = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getTargetsList() {
        return java.util.Collections.unmodifiableList(targets_);
      }
      /**
       * <pre>
       * ids of the targeted functions
       * </pre>
       *
       * <code>repeated int32 targets = 4;</code>
       */
      public int getTargetsCount() {
        return targets_.size();
      }
      /**
       * <pre>
       * ids of the targeted functions
       * </pre>
       *
       * <code>repeated int32 targets = 4;</code>
       */
      public int getTargets(int index) {
        return targets_.get(index);
      }
      /**
       * <pre>
       * ids of the targeted functions
       * </pre>
       *
       * <code>repeated int32 targets = 4;</code>
       */
      public Builder setTargets(
          int index, int value) {
        ensureTargetsIsMutable();
        targets_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of the targeted functions
       * </pre>
       *
       * <code>repeated int32 targets = 4;</code>
       */
      public Builder addTargets(int value) {
        ensureTargetsIsMutable();
        targets_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of the targeted functions
       * </pre>
       *
       * <code>repeated int32 targets = 4;</code>
       */
      public Builder addAllTargets(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTargetsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, targets_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of the targeted functions
       * </pre>
       *
       * <code>repeated int32 targets = 4;</code>
       */
      public Builder clearTargets() {
        targets_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> neighbors_ = java.util.Collections.emptyList();
      private void ensureNeighborsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          neighbors_ = new java.util.ArrayList<java.lang.Integer>(neighbors_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 neighbors = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getNeighborsList() {
        return java.util.Collections.unmodifiableList(neighbors_);
      }
      /**
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighborsCount() {
        return neighbors_.size();
      }
      /**
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighbors(int index) {
        return neighbors_.get(index);
      }
      /**
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder setNeighbors(
          int index, int value) {
        ensureNeighborsIsMutable();
        neighbors_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addNeighbors(int value) {
        ensureNeighborsIsMutable();
        neighbors_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addAllNeighbors(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNeighborsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, neighbors_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder clearNeighbors() {
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:parex.graph.CallNode)
    }

    // @@protoc_insertion_point(class_scope:parex.graph.CallNode)
    private static final edu.kit.joana.wala.summary.parex.GraphProto.CallNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.kit.joana.wala.summary.parex.GraphProto.CallNode();
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.CallNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CallNode>
        PARSER = new com.google.protobuf.AbstractParser<CallNode>() {
      @java.lang.Override
      public CallNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CallNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CallNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CallNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.kit.joana.wala.summary.parex.GraphProto.CallNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FuncNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:parex.graph.FuncNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ids of formal in nodes
     * </pre>
     *
     * <code>repeated int32 formal_ins = 1;</code>
     */
    java.util.List<java.lang.Integer> getFormalInsList();
    /**
     * <pre>
     * ids of formal in nodes
     * </pre>
     *
     * <code>repeated int32 formal_ins = 1;</code>
     */
    int getFormalInsCount();
    /**
     * <pre>
     * ids of formal in nodes
     * </pre>
     *
     * <code>repeated int32 formal_ins = 1;</code>
     */
    int getFormalIns(int index);

    /**
     * <pre>
     * ids of formal out nodes
     * </pre>
     *
     * <code>repeated int32 formal_outs = 2;</code>
     */
    java.util.List<java.lang.Integer> getFormalOutsList();
    /**
     * <pre>
     * ids of formal out nodes
     * </pre>
     *
     * <code>repeated int32 formal_outs = 2;</code>
     */
    int getFormalOutsCount();
    /**
     * <pre>
     * ids of formal out nodes
     * </pre>
     *
     * <code>repeated int32 formal_outs = 2;</code>
     */
    int getFormalOuts(int index);

    /**
     * <pre>
     * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
     * </pre>
     *
     * <code>repeated int32 callees = 3;</code>
     */
    java.util.List<java.lang.Integer> getCalleesList();
    /**
     * <pre>
     * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
     * </pre>
     *
     * <code>repeated int32 callees = 3;</code>
     */
    int getCalleesCount();
    /**
     * <pre>
     * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
     * </pre>
     *
     * <code>repeated int32 callees = 3;</code>
     */
    int getCallees(int index);

    /**
     * <pre>
     * ids of calling call nodes, ∀ c ∈ callers: c.target = this
     * </pre>
     *
     * <code>repeated int32 callers = 4;</code>
     */
    java.util.List<java.lang.Integer> getCallersList();
    /**
     * <pre>
     * ids of calling call nodes, ∀ c ∈ callers: c.target = this
     * </pre>
     *
     * <code>repeated int32 callers = 4;</code>
     */
    int getCallersCount();
    /**
     * <pre>
     * ids of calling call nodes, ∀ c ∈ callers: c.target = this
     * </pre>
     *
     * <code>repeated int32 callers = 4;</code>
     */
    int getCallers(int index);

    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    java.util.List<java.lang.Integer> getNeighborsList();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighborsCount();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighbors(int index);
  }
  /**
   * Protobuf type {@code parex.graph.FuncNode}
   */
  public  static final class FuncNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:parex.graph.FuncNode)
      FuncNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FuncNode.newBuilder() to construct.
    private FuncNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FuncNode() {
      formalIns_ = java.util.Collections.emptyList();
      formalOuts_ = java.util.Collections.emptyList();
      callees_ = java.util.Collections.emptyList();
      callers_ = java.util.Collections.emptyList();
      neighbors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FuncNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                formalIns_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              formalIns_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                formalIns_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                formalIns_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                formalOuts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              formalOuts_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                formalOuts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                formalOuts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                callees_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              callees_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                callees_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                callees_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                callers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              callers_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                callers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                callers_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              neighbors_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                neighbors_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          formalIns_ = java.util.Collections.unmodifiableList(formalIns_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          formalOuts_ = java.util.Collections.unmodifiableList(formalOuts_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          callees_ = java.util.Collections.unmodifiableList(callees_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          callers_ = java.util.Collections.unmodifiableList(callers_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FuncNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FuncNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.kit.joana.wala.summary.parex.GraphProto.FuncNode.class, edu.kit.joana.wala.summary.parex.GraphProto.FuncNode.Builder.class);
    }

    public static final int FORMAL_INS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> formalIns_;
    /**
     * <pre>
     * ids of formal in nodes
     * </pre>
     *
     * <code>repeated int32 formal_ins = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getFormalInsList() {
      return formalIns_;
    }
    /**
     * <pre>
     * ids of formal in nodes
     * </pre>
     *
     * <code>repeated int32 formal_ins = 1;</code>
     */
    public int getFormalInsCount() {
      return formalIns_.size();
    }
    /**
     * <pre>
     * ids of formal in nodes
     * </pre>
     *
     * <code>repeated int32 formal_ins = 1;</code>
     */
    public int getFormalIns(int index) {
      return formalIns_.get(index);
    }
    private int formalInsMemoizedSerializedSize = -1;

    public static final int FORMAL_OUTS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> formalOuts_;
    /**
     * <pre>
     * ids of formal out nodes
     * </pre>
     *
     * <code>repeated int32 formal_outs = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getFormalOutsList() {
      return formalOuts_;
    }
    /**
     * <pre>
     * ids of formal out nodes
     * </pre>
     *
     * <code>repeated int32 formal_outs = 2;</code>
     */
    public int getFormalOutsCount() {
      return formalOuts_.size();
    }
    /**
     * <pre>
     * ids of formal out nodes
     * </pre>
     *
     * <code>repeated int32 formal_outs = 2;</code>
     */
    public int getFormalOuts(int index) {
      return formalOuts_.get(index);
    }
    private int formalOutsMemoizedSerializedSize = -1;

    public static final int CALLEES_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> callees_;
    /**
     * <pre>
     * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
     * </pre>
     *
     * <code>repeated int32 callees = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getCalleesList() {
      return callees_;
    }
    /**
     * <pre>
     * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
     * </pre>
     *
     * <code>repeated int32 callees = 3;</code>
     */
    public int getCalleesCount() {
      return callees_.size();
    }
    /**
     * <pre>
     * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
     * </pre>
     *
     * <code>repeated int32 callees = 3;</code>
     */
    public int getCallees(int index) {
      return callees_.get(index);
    }
    private int calleesMemoizedSerializedSize = -1;

    public static final int CALLERS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> callers_;
    /**
     * <pre>
     * ids of calling call nodes, ∀ c ∈ callers: c.target = this
     * </pre>
     *
     * <code>repeated int32 callers = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getCallersList() {
      return callers_;
    }
    /**
     * <pre>
     * ids of calling call nodes, ∀ c ∈ callers: c.target = this
     * </pre>
     *
     * <code>repeated int32 callers = 4;</code>
     */
    public int getCallersCount() {
      return callers_.size();
    }
    /**
     * <pre>
     * ids of calling call nodes, ∀ c ∈ callers: c.target = this
     * </pre>
     *
     * <code>repeated int32 callers = 4;</code>
     */
    public int getCallers(int index) {
      return callers_.get(index);
    }
    private int callersMemoizedSerializedSize = -1;

    public static final int NEIGHBORS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> neighbors_;
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getNeighborsList() {
      return neighbors_;
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighborsCount() {
      return neighbors_.size();
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighbors(int index) {
      return neighbors_.get(index);
    }
    private int neighborsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getFormalInsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(formalInsMemoizedSerializedSize);
      }
      for (int i = 0; i < formalIns_.size(); i++) {
        output.writeInt32NoTag(formalIns_.get(i));
      }
      if (getFormalOutsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(formalOutsMemoizedSerializedSize);
      }
      for (int i = 0; i < formalOuts_.size(); i++) {
        output.writeInt32NoTag(formalOuts_.get(i));
      }
      if (getCalleesList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(calleesMemoizedSerializedSize);
      }
      for (int i = 0; i < callees_.size(); i++) {
        output.writeInt32NoTag(callees_.get(i));
      }
      if (getCallersList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(callersMemoizedSerializedSize);
      }
      for (int i = 0; i < callers_.size(); i++) {
        output.writeInt32NoTag(callers_.get(i));
      }
      if (getNeighborsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(neighborsMemoizedSerializedSize);
      }
      for (int i = 0; i < neighbors_.size(); i++) {
        output.writeInt32NoTag(neighbors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < formalIns_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(formalIns_.get(i));
        }
        size += dataSize;
        if (!getFormalInsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        formalInsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < formalOuts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(formalOuts_.get(i));
        }
        size += dataSize;
        if (!getFormalOutsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        formalOutsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < callees_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(callees_.get(i));
        }
        size += dataSize;
        if (!getCalleesList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        calleesMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < callers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(callers_.get(i));
        }
        size += dataSize;
        if (!getCallersList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        callersMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < neighbors_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(neighbors_.get(i));
        }
        size += dataSize;
        if (!getNeighborsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        neighborsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.kit.joana.wala.summary.parex.GraphProto.FuncNode)) {
        return super.equals(obj);
      }
      edu.kit.joana.wala.summary.parex.GraphProto.FuncNode other = (edu.kit.joana.wala.summary.parex.GraphProto.FuncNode) obj;

      boolean result = true;
      result = result && getFormalInsList()
          .equals(other.getFormalInsList());
      result = result && getFormalOutsList()
          .equals(other.getFormalOutsList());
      result = result && getCalleesList()
          .equals(other.getCalleesList());
      result = result && getCallersList()
          .equals(other.getCallersList());
      result = result && getNeighborsList()
          .equals(other.getNeighborsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFormalInsCount() > 0) {
        hash = (37 * hash) + FORMAL_INS_FIELD_NUMBER;
        hash = (53 * hash) + getFormalInsList().hashCode();
      }
      if (getFormalOutsCount() > 0) {
        hash = (37 * hash) + FORMAL_OUTS_FIELD_NUMBER;
        hash = (53 * hash) + getFormalOutsList().hashCode();
      }
      if (getCalleesCount() > 0) {
        hash = (37 * hash) + CALLEES_FIELD_NUMBER;
        hash = (53 * hash) + getCalleesList().hashCode();
      }
      if (getCallersCount() > 0) {
        hash = (37 * hash) + CALLERS_FIELD_NUMBER;
        hash = (53 * hash) + getCallersList().hashCode();
      }
      if (getNeighborsCount() > 0) {
        hash = (37 * hash) + NEIGHBORS_FIELD_NUMBER;
        hash = (53 * hash) + getNeighborsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.kit.joana.wala.summary.parex.GraphProto.FuncNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code parex.graph.FuncNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:parex.graph.FuncNode)
        edu.kit.joana.wala.summary.parex.GraphProto.FuncNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FuncNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FuncNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.kit.joana.wala.summary.parex.GraphProto.FuncNode.class, edu.kit.joana.wala.summary.parex.GraphProto.FuncNode.Builder.class);
      }

      // Construct using edu.kit.joana.wala.summary.parex.GraphProto.FuncNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        formalIns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        formalOuts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        callees_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        callers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FuncNode_descriptor;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.FuncNode getDefaultInstanceForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.FuncNode.getDefaultInstance();
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.FuncNode build() {
        edu.kit.joana.wala.summary.parex.GraphProto.FuncNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.FuncNode buildPartial() {
        edu.kit.joana.wala.summary.parex.GraphProto.FuncNode result = new edu.kit.joana.wala.summary.parex.GraphProto.FuncNode(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          formalIns_ = java.util.Collections.unmodifiableList(formalIns_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.formalIns_ = formalIns_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          formalOuts_ = java.util.Collections.unmodifiableList(formalOuts_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.formalOuts_ = formalOuts_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          callees_ = java.util.Collections.unmodifiableList(callees_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.callees_ = callees_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          callers_ = java.util.Collections.unmodifiableList(callers_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.callers_ = callers_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.neighbors_ = neighbors_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.kit.joana.wala.summary.parex.GraphProto.FuncNode) {
          return mergeFrom((edu.kit.joana.wala.summary.parex.GraphProto.FuncNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.kit.joana.wala.summary.parex.GraphProto.FuncNode other) {
        if (other == edu.kit.joana.wala.summary.parex.GraphProto.FuncNode.getDefaultInstance()) return this;
        if (!other.formalIns_.isEmpty()) {
          if (formalIns_.isEmpty()) {
            formalIns_ = other.formalIns_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFormalInsIsMutable();
            formalIns_.addAll(other.formalIns_);
          }
          onChanged();
        }
        if (!other.formalOuts_.isEmpty()) {
          if (formalOuts_.isEmpty()) {
            formalOuts_ = other.formalOuts_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFormalOutsIsMutable();
            formalOuts_.addAll(other.formalOuts_);
          }
          onChanged();
        }
        if (!other.callees_.isEmpty()) {
          if (callees_.isEmpty()) {
            callees_ = other.callees_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCalleesIsMutable();
            callees_.addAll(other.callees_);
          }
          onChanged();
        }
        if (!other.callers_.isEmpty()) {
          if (callers_.isEmpty()) {
            callers_ = other.callers_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCallersIsMutable();
            callers_.addAll(other.callers_);
          }
          onChanged();
        }
        if (!other.neighbors_.isEmpty()) {
          if (neighbors_.isEmpty()) {
            neighbors_ = other.neighbors_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureNeighborsIsMutable();
            neighbors_.addAll(other.neighbors_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.kit.joana.wala.summary.parex.GraphProto.FuncNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.kit.joana.wala.summary.parex.GraphProto.FuncNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> formalIns_ = java.util.Collections.emptyList();
      private void ensureFormalInsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          formalIns_ = new java.util.ArrayList<java.lang.Integer>(formalIns_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * ids of formal in nodes
       * </pre>
       *
       * <code>repeated int32 formal_ins = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getFormalInsList() {
        return java.util.Collections.unmodifiableList(formalIns_);
      }
      /**
       * <pre>
       * ids of formal in nodes
       * </pre>
       *
       * <code>repeated int32 formal_ins = 1;</code>
       */
      public int getFormalInsCount() {
        return formalIns_.size();
      }
      /**
       * <pre>
       * ids of formal in nodes
       * </pre>
       *
       * <code>repeated int32 formal_ins = 1;</code>
       */
      public int getFormalIns(int index) {
        return formalIns_.get(index);
      }
      /**
       * <pre>
       * ids of formal in nodes
       * </pre>
       *
       * <code>repeated int32 formal_ins = 1;</code>
       */
      public Builder setFormalIns(
          int index, int value) {
        ensureFormalInsIsMutable();
        formalIns_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of formal in nodes
       * </pre>
       *
       * <code>repeated int32 formal_ins = 1;</code>
       */
      public Builder addFormalIns(int value) {
        ensureFormalInsIsMutable();
        formalIns_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of formal in nodes
       * </pre>
       *
       * <code>repeated int32 formal_ins = 1;</code>
       */
      public Builder addAllFormalIns(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFormalInsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, formalIns_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of formal in nodes
       * </pre>
       *
       * <code>repeated int32 formal_ins = 1;</code>
       */
      public Builder clearFormalIns() {
        formalIns_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> formalOuts_ = java.util.Collections.emptyList();
      private void ensureFormalOutsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          formalOuts_ = new java.util.ArrayList<java.lang.Integer>(formalOuts_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * ids of formal out nodes
       * </pre>
       *
       * <code>repeated int32 formal_outs = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getFormalOutsList() {
        return java.util.Collections.unmodifiableList(formalOuts_);
      }
      /**
       * <pre>
       * ids of formal out nodes
       * </pre>
       *
       * <code>repeated int32 formal_outs = 2;</code>
       */
      public int getFormalOutsCount() {
        return formalOuts_.size();
      }
      /**
       * <pre>
       * ids of formal out nodes
       * </pre>
       *
       * <code>repeated int32 formal_outs = 2;</code>
       */
      public int getFormalOuts(int index) {
        return formalOuts_.get(index);
      }
      /**
       * <pre>
       * ids of formal out nodes
       * </pre>
       *
       * <code>repeated int32 formal_outs = 2;</code>
       */
      public Builder setFormalOuts(
          int index, int value) {
        ensureFormalOutsIsMutable();
        formalOuts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of formal out nodes
       * </pre>
       *
       * <code>repeated int32 formal_outs = 2;</code>
       */
      public Builder addFormalOuts(int value) {
        ensureFormalOutsIsMutable();
        formalOuts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of formal out nodes
       * </pre>
       *
       * <code>repeated int32 formal_outs = 2;</code>
       */
      public Builder addAllFormalOuts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFormalOutsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, formalOuts_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of formal out nodes
       * </pre>
       *
       * <code>repeated int32 formal_outs = 2;</code>
       */
      public Builder clearFormalOuts() {
        formalOuts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> callees_ = java.util.Collections.emptyList();
      private void ensureCalleesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          callees_ = new java.util.ArrayList<java.lang.Integer>(callees_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
       * </pre>
       *
       * <code>repeated int32 callees = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getCalleesList() {
        return java.util.Collections.unmodifiableList(callees_);
      }
      /**
       * <pre>
       * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
       * </pre>
       *
       * <code>repeated int32 callees = 3;</code>
       */
      public int getCalleesCount() {
        return callees_.size();
      }
      /**
       * <pre>
       * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
       * </pre>
       *
       * <code>repeated int32 callees = 3;</code>
       */
      public int getCallees(int index) {
        return callees_.get(index);
      }
      /**
       * <pre>
       * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
       * </pre>
       *
       * <code>repeated int32 callees = 3;</code>
       */
      public Builder setCallees(
          int index, int value) {
        ensureCalleesIsMutable();
        callees_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
       * </pre>
       *
       * <code>repeated int32 callees = 3;</code>
       */
      public Builder addCallees(int value) {
        ensureCalleesIsMutable();
        callees_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
       * </pre>
       *
       * <code>repeated int32 callees = 3;</code>
       */
      public Builder addAllCallees(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCalleesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, callees_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of calls to other functions, ∀ c ∈ neighbors: c.owner = this
       * </pre>
       *
       * <code>repeated int32 callees = 3;</code>
       */
      public Builder clearCallees() {
        callees_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> callers_ = java.util.Collections.emptyList();
      private void ensureCallersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          callers_ = new java.util.ArrayList<java.lang.Integer>(callers_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * ids of calling call nodes, ∀ c ∈ callers: c.target = this
       * </pre>
       *
       * <code>repeated int32 callers = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getCallersList() {
        return java.util.Collections.unmodifiableList(callers_);
      }
      /**
       * <pre>
       * ids of calling call nodes, ∀ c ∈ callers: c.target = this
       * </pre>
       *
       * <code>repeated int32 callers = 4;</code>
       */
      public int getCallersCount() {
        return callers_.size();
      }
      /**
       * <pre>
       * ids of calling call nodes, ∀ c ∈ callers: c.target = this
       * </pre>
       *
       * <code>repeated int32 callers = 4;</code>
       */
      public int getCallers(int index) {
        return callers_.get(index);
      }
      /**
       * <pre>
       * ids of calling call nodes, ∀ c ∈ callers: c.target = this
       * </pre>
       *
       * <code>repeated int32 callers = 4;</code>
       */
      public Builder setCallers(
          int index, int value) {
        ensureCallersIsMutable();
        callers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of calling call nodes, ∀ c ∈ callers: c.target = this
       * </pre>
       *
       * <code>repeated int32 callers = 4;</code>
       */
      public Builder addCallers(int value) {
        ensureCallersIsMutable();
        callers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of calling call nodes, ∀ c ∈ callers: c.target = this
       * </pre>
       *
       * <code>repeated int32 callers = 4;</code>
       */
      public Builder addAllCallers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCallersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, callers_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of calling call nodes, ∀ c ∈ callers: c.target = this
       * </pre>
       *
       * <code>repeated int32 callers = 4;</code>
       */
      public Builder clearCallers() {
        callers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> neighbors_ = java.util.Collections.emptyList();
      private void ensureNeighborsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          neighbors_ = new java.util.ArrayList<java.lang.Integer>(neighbors_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getNeighborsList() {
        return java.util.Collections.unmodifiableList(neighbors_);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighborsCount() {
        return neighbors_.size();
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighbors(int index) {
        return neighbors_.get(index);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder setNeighbors(
          int index, int value) {
        ensureNeighborsIsMutable();
        neighbors_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addNeighbors(int value) {
        ensureNeighborsIsMutable();
        neighbors_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addAllNeighbors(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNeighborsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, neighbors_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder clearNeighbors() {
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:parex.graph.FuncNode)
    }

    // @@protoc_insertion_point(class_scope:parex.graph.FuncNode)
    private static final edu.kit.joana.wala.summary.parex.GraphProto.FuncNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.kit.joana.wala.summary.parex.GraphProto.FuncNode();
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.FuncNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FuncNode>
        PARSER = new com.google.protobuf.AbstractParser<FuncNode>() {
      @java.lang.Override
      public FuncNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FuncNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FuncNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FuncNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.kit.joana.wala.summary.parex.GraphProto.FuncNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ActualInNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:parex.graph.ActualInNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * function node id → formal in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
     */
    int getFormalInsCount();
    /**
     * <pre>
     * function node id → formal in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
     */
    boolean containsFormalIns(
        int key);
    /**
     * Use {@link #getFormalInsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getFormalIns();
    /**
     * <pre>
     * function node id → formal in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getFormalInsMap();
    /**
     * <pre>
     * function node id → formal in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
     */

    int getFormalInsOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     * function node id → formal in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
     */

    int getFormalInsOrThrow(
        int key);

    /**
     * <pre>
     * call node, might be -1 if no real call node is present
     * </pre>
     *
     * <code>int32 callNode = 3;</code>
     */
    int getCallNode();

    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    java.util.List<java.lang.Integer> getNeighborsList();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighborsCount();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighbors(int index);
  }
  /**
   * Protobuf type {@code parex.graph.ActualInNode}
   */
  public  static final class ActualInNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:parex.graph.ActualInNode)
      ActualInNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ActualInNode.newBuilder() to construct.
    private ActualInNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ActualInNode() {
      callNode_ = 0;
      neighbors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ActualInNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                formalIns_ = com.google.protobuf.MapField.newMapField(
                    FormalInsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              formalIns__ = input.readMessage(
                  FormalInsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              formalIns_.getMutableMap().put(
                  formalIns__.getKey(), formalIns__.getValue());
              break;
            }
            case 24: {

              callNode_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              neighbors_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                neighbors_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualInNode_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetFormalIns();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualInNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode.class, edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode.Builder.class);
    }

    private int bitField0_;
    public static final int FORMAL_INS_FIELD_NUMBER = 1;
    private static final class FormalInsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualInNode_FormalInsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> formalIns_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetFormalIns() {
      if (formalIns_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FormalInsDefaultEntryHolder.defaultEntry);
      }
      return formalIns_;
    }

    public int getFormalInsCount() {
      return internalGetFormalIns().getMap().size();
    }
    /**
     * <pre>
     * function node id → formal in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
     */

    public boolean containsFormalIns(
        int key) {
      
      return internalGetFormalIns().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFormalInsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getFormalIns() {
      return getFormalInsMap();
    }
    /**
     * <pre>
     * function node id → formal in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getFormalInsMap() {
      return internalGetFormalIns().getMap();
    }
    /**
     * <pre>
     * function node id → formal in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
     */

    public int getFormalInsOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetFormalIns().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * function node id → formal in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
     */

    public int getFormalInsOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetFormalIns().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CALLNODE_FIELD_NUMBER = 3;
    private int callNode_;
    /**
     * <pre>
     * call node, might be -1 if no real call node is present
     * </pre>
     *
     * <code>int32 callNode = 3;</code>
     */
    public int getCallNode() {
      return callNode_;
    }

    public static final int NEIGHBORS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> neighbors_;
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getNeighborsList() {
      return neighbors_;
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighborsCount() {
      return neighbors_.size();
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighbors(int index) {
      return neighbors_.get(index);
    }
    private int neighborsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetFormalIns(),
          FormalInsDefaultEntryHolder.defaultEntry,
          1);
      if (callNode_ != 0) {
        output.writeInt32(3, callNode_);
      }
      if (getNeighborsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(neighborsMemoizedSerializedSize);
      }
      for (int i = 0; i < neighbors_.size(); i++) {
        output.writeInt32NoTag(neighbors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetFormalIns().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        formalIns__ = FormalInsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, formalIns__);
      }
      if (callNode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, callNode_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < neighbors_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(neighbors_.get(i));
        }
        size += dataSize;
        if (!getNeighborsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        neighborsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode)) {
        return super.equals(obj);
      }
      edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode other = (edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode) obj;

      boolean result = true;
      result = result && internalGetFormalIns().equals(
          other.internalGetFormalIns());
      result = result && (getCallNode()
          == other.getCallNode());
      result = result && getNeighborsList()
          .equals(other.getNeighborsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetFormalIns().getMap().isEmpty()) {
        hash = (37 * hash) + FORMAL_INS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFormalIns().hashCode();
      }
      hash = (37 * hash) + CALLNODE_FIELD_NUMBER;
      hash = (53 * hash) + getCallNode();
      if (getNeighborsCount() > 0) {
        hash = (37 * hash) + NEIGHBORS_FIELD_NUMBER;
        hash = (53 * hash) + getNeighborsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code parex.graph.ActualInNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:parex.graph.ActualInNode)
        edu.kit.joana.wala.summary.parex.GraphProto.ActualInNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualInNode_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetFormalIns();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableFormalIns();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualInNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode.class, edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode.Builder.class);
      }

      // Construct using edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableFormalIns().clear();
        callNode_ = 0;

        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualInNode_descriptor;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode getDefaultInstanceForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode.getDefaultInstance();
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode build() {
        edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode buildPartial() {
        edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode result = new edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.formalIns_ = internalGetFormalIns();
        result.formalIns_.makeImmutable();
        result.callNode_ = callNode_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.neighbors_ = neighbors_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode) {
          return mergeFrom((edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode other) {
        if (other == edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode.getDefaultInstance()) return this;
        internalGetMutableFormalIns().mergeFrom(
            other.internalGetFormalIns());
        if (other.getCallNode() != 0) {
          setCallNode(other.getCallNode());
        }
        if (!other.neighbors_.isEmpty()) {
          if (neighbors_.isEmpty()) {
            neighbors_ = other.neighbors_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureNeighborsIsMutable();
            neighbors_.addAll(other.neighbors_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> formalIns_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetFormalIns() {
        if (formalIns_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FormalInsDefaultEntryHolder.defaultEntry);
        }
        return formalIns_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableFormalIns() {
        onChanged();;
        if (formalIns_ == null) {
          formalIns_ = com.google.protobuf.MapField.newMapField(
              FormalInsDefaultEntryHolder.defaultEntry);
        }
        if (!formalIns_.isMutable()) {
          formalIns_ = formalIns_.copy();
        }
        return formalIns_;
      }

      public int getFormalInsCount() {
        return internalGetFormalIns().getMap().size();
      }
      /**
       * <pre>
       * function node id → formal in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
       */

      public boolean containsFormalIns(
          int key) {
        
        return internalGetFormalIns().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFormalInsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getFormalIns() {
        return getFormalInsMap();
      }
      /**
       * <pre>
       * function node id → formal in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getFormalInsMap() {
        return internalGetFormalIns().getMap();
      }
      /**
       * <pre>
       * function node id → formal in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
       */

      public int getFormalInsOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetFormalIns().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * function node id → formal in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
       */

      public int getFormalInsOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetFormalIns().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFormalIns() {
        internalGetMutableFormalIns().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * function node id → formal in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
       */

      public Builder removeFormalIns(
          int key) {
        
        internalGetMutableFormalIns().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableFormalIns() {
        return internalGetMutableFormalIns().getMutableMap();
      }
      /**
       * <pre>
       * function node id → formal in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
       */
      public Builder putFormalIns(
          int key,
          int value) {
        
        
        internalGetMutableFormalIns().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * function node id → formal in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; formal_ins = 1;</code>
       */

      public Builder putAllFormalIns(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableFormalIns().getMutableMap()
            .putAll(values);
        return this;
      }

      private int callNode_ ;
      /**
       * <pre>
       * call node, might be -1 if no real call node is present
       * </pre>
       *
       * <code>int32 callNode = 3;</code>
       */
      public int getCallNode() {
        return callNode_;
      }
      /**
       * <pre>
       * call node, might be -1 if no real call node is present
       * </pre>
       *
       * <code>int32 callNode = 3;</code>
       */
      public Builder setCallNode(int value) {
        
        callNode_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * call node, might be -1 if no real call node is present
       * </pre>
       *
       * <code>int32 callNode = 3;</code>
       */
      public Builder clearCallNode() {
        
        callNode_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> neighbors_ = java.util.Collections.emptyList();
      private void ensureNeighborsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          neighbors_ = new java.util.ArrayList<java.lang.Integer>(neighbors_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getNeighborsList() {
        return java.util.Collections.unmodifiableList(neighbors_);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighborsCount() {
        return neighbors_.size();
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighbors(int index) {
        return neighbors_.get(index);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder setNeighbors(
          int index, int value) {
        ensureNeighborsIsMutable();
        neighbors_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addNeighbors(int value) {
        ensureNeighborsIsMutable();
        neighbors_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addAllNeighbors(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNeighborsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, neighbors_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder clearNeighbors() {
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:parex.graph.ActualInNode)
    }

    // @@protoc_insertion_point(class_scope:parex.graph.ActualInNode)
    private static final edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode();
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ActualInNode>
        PARSER = new com.google.protobuf.AbstractParser<ActualInNode>() {
      @java.lang.Override
      public ActualInNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActualInNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ActualInNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ActualInNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.kit.joana.wala.summary.parex.GraphProto.ActualInNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FormalInNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:parex.graph.FormalInNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * call node id → actual in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
     */
    int getActualInsCount();
    /**
     * <pre>
     * call node id → actual in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
     */
    boolean containsActualIns(
        int key);
    /**
     * Use {@link #getActualInsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getActualIns();
    /**
     * <pre>
     * call node id → actual in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getActualInsMap();
    /**
     * <pre>
     * call node id → actual in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
     */

    int getActualInsOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     * call node id → actual in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
     */

    int getActualInsOrThrow(
        int key);

    /**
     * <pre>
     * id of the owning function
     * </pre>
     *
     * <code>int32 owner = 3;</code>
     */
    int getOwner();

    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    java.util.List<java.lang.Integer> getNeighborsList();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighborsCount();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighbors(int index);
  }
  /**
   * Protobuf type {@code parex.graph.FormalInNode}
   */
  public  static final class FormalInNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:parex.graph.FormalInNode)
      FormalInNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FormalInNode.newBuilder() to construct.
    private FormalInNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FormalInNode() {
      owner_ = 0;
      neighbors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FormalInNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                actualIns_ = com.google.protobuf.MapField.newMapField(
                    ActualInsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              actualIns__ = input.readMessage(
                  ActualInsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              actualIns_.getMutableMap().put(
                  actualIns__.getKey(), actualIns__.getValue());
              break;
            }
            case 24: {

              owner_ = input.readInt32();
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              neighbors_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                neighbors_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalInNode_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetActualIns();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalInNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode.class, edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode.Builder.class);
    }

    private int bitField0_;
    public static final int ACTUAL_INS_FIELD_NUMBER = 1;
    private static final class ActualInsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalInNode_ActualInsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> actualIns_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetActualIns() {
      if (actualIns_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ActualInsDefaultEntryHolder.defaultEntry);
      }
      return actualIns_;
    }

    public int getActualInsCount() {
      return internalGetActualIns().getMap().size();
    }
    /**
     * <pre>
     * call node id → actual in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
     */

    public boolean containsActualIns(
        int key) {
      
      return internalGetActualIns().getMap().containsKey(key);
    }
    /**
     * Use {@link #getActualInsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getActualIns() {
      return getActualInsMap();
    }
    /**
     * <pre>
     * call node id → actual in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getActualInsMap() {
      return internalGetActualIns().getMap();
    }
    /**
     * <pre>
     * call node id → actual in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
     */

    public int getActualInsOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetActualIns().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * call node id → actual in node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
     */

    public int getActualInsOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetActualIns().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int OWNER_FIELD_NUMBER = 3;
    private int owner_;
    /**
     * <pre>
     * id of the owning function
     * </pre>
     *
     * <code>int32 owner = 3;</code>
     */
    public int getOwner() {
      return owner_;
    }

    public static final int NEIGHBORS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> neighbors_;
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getNeighborsList() {
      return neighbors_;
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighborsCount() {
      return neighbors_.size();
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighbors(int index) {
      return neighbors_.get(index);
    }
    private int neighborsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetActualIns(),
          ActualInsDefaultEntryHolder.defaultEntry,
          1);
      if (owner_ != 0) {
        output.writeInt32(3, owner_);
      }
      if (getNeighborsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(neighborsMemoizedSerializedSize);
      }
      for (int i = 0; i < neighbors_.size(); i++) {
        output.writeInt32NoTag(neighbors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetActualIns().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        actualIns__ = ActualInsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, actualIns__);
      }
      if (owner_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, owner_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < neighbors_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(neighbors_.get(i));
        }
        size += dataSize;
        if (!getNeighborsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        neighborsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode)) {
        return super.equals(obj);
      }
      edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode other = (edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode) obj;

      boolean result = true;
      result = result && internalGetActualIns().equals(
          other.internalGetActualIns());
      result = result && (getOwner()
          == other.getOwner());
      result = result && getNeighborsList()
          .equals(other.getNeighborsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetActualIns().getMap().isEmpty()) {
        hash = (37 * hash) + ACTUAL_INS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetActualIns().hashCode();
      }
      hash = (37 * hash) + OWNER_FIELD_NUMBER;
      hash = (53 * hash) + getOwner();
      if (getNeighborsCount() > 0) {
        hash = (37 * hash) + NEIGHBORS_FIELD_NUMBER;
        hash = (53 * hash) + getNeighborsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code parex.graph.FormalInNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:parex.graph.FormalInNode)
        edu.kit.joana.wala.summary.parex.GraphProto.FormalInNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalInNode_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetActualIns();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableActualIns();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalInNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode.class, edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode.Builder.class);
      }

      // Construct using edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableActualIns().clear();
        owner_ = 0;

        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalInNode_descriptor;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode getDefaultInstanceForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode.getDefaultInstance();
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode build() {
        edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode buildPartial() {
        edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode result = new edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.actualIns_ = internalGetActualIns();
        result.actualIns_.makeImmutable();
        result.owner_ = owner_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.neighbors_ = neighbors_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode) {
          return mergeFrom((edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode other) {
        if (other == edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode.getDefaultInstance()) return this;
        internalGetMutableActualIns().mergeFrom(
            other.internalGetActualIns());
        if (other.getOwner() != 0) {
          setOwner(other.getOwner());
        }
        if (!other.neighbors_.isEmpty()) {
          if (neighbors_.isEmpty()) {
            neighbors_ = other.neighbors_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureNeighborsIsMutable();
            neighbors_.addAll(other.neighbors_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> actualIns_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetActualIns() {
        if (actualIns_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ActualInsDefaultEntryHolder.defaultEntry);
        }
        return actualIns_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableActualIns() {
        onChanged();;
        if (actualIns_ == null) {
          actualIns_ = com.google.protobuf.MapField.newMapField(
              ActualInsDefaultEntryHolder.defaultEntry);
        }
        if (!actualIns_.isMutable()) {
          actualIns_ = actualIns_.copy();
        }
        return actualIns_;
      }

      public int getActualInsCount() {
        return internalGetActualIns().getMap().size();
      }
      /**
       * <pre>
       * call node id → actual in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
       */

      public boolean containsActualIns(
          int key) {
        
        return internalGetActualIns().getMap().containsKey(key);
      }
      /**
       * Use {@link #getActualInsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getActualIns() {
        return getActualInsMap();
      }
      /**
       * <pre>
       * call node id → actual in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getActualInsMap() {
        return internalGetActualIns().getMap();
      }
      /**
       * <pre>
       * call node id → actual in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
       */

      public int getActualInsOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetActualIns().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * call node id → actual in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
       */

      public int getActualInsOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetActualIns().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearActualIns() {
        internalGetMutableActualIns().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * call node id → actual in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
       */

      public Builder removeActualIns(
          int key) {
        
        internalGetMutableActualIns().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableActualIns() {
        return internalGetMutableActualIns().getMutableMap();
      }
      /**
       * <pre>
       * call node id → actual in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
       */
      public Builder putActualIns(
          int key,
          int value) {
        
        
        internalGetMutableActualIns().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * call node id → actual in node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_ins = 1;</code>
       */

      public Builder putAllActualIns(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableActualIns().getMutableMap()
            .putAll(values);
        return this;
      }

      private int owner_ ;
      /**
       * <pre>
       * id of the owning function
       * </pre>
       *
       * <code>int32 owner = 3;</code>
       */
      public int getOwner() {
        return owner_;
      }
      /**
       * <pre>
       * id of the owning function
       * </pre>
       *
       * <code>int32 owner = 3;</code>
       */
      public Builder setOwner(int value) {
        
        owner_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * id of the owning function
       * </pre>
       *
       * <code>int32 owner = 3;</code>
       */
      public Builder clearOwner() {
        
        owner_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> neighbors_ = java.util.Collections.emptyList();
      private void ensureNeighborsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          neighbors_ = new java.util.ArrayList<java.lang.Integer>(neighbors_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getNeighborsList() {
        return java.util.Collections.unmodifiableList(neighbors_);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighborsCount() {
        return neighbors_.size();
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighbors(int index) {
        return neighbors_.get(index);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder setNeighbors(
          int index, int value) {
        ensureNeighborsIsMutable();
        neighbors_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addNeighbors(int value) {
        ensureNeighborsIsMutable();
        neighbors_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addAllNeighbors(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNeighborsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, neighbors_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder clearNeighbors() {
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:parex.graph.FormalInNode)
    }

    // @@protoc_insertion_point(class_scope:parex.graph.FormalInNode)
    private static final edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode();
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FormalInNode>
        PARSER = new com.google.protobuf.AbstractParser<FormalInNode>() {
      @java.lang.Override
      public FormalInNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FormalInNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FormalInNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FormalInNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.kit.joana.wala.summary.parex.GraphProto.FormalInNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ActualOutNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:parex.graph.ActualOutNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    java.util.List<java.lang.Integer> getNeighborsList();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighborsCount();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighbors(int index);
  }
  /**
   * Protobuf type {@code parex.graph.ActualOutNode}
   */
  public  static final class ActualOutNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:parex.graph.ActualOutNode)
      ActualOutNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ActualOutNode.newBuilder() to construct.
    private ActualOutNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ActualOutNode() {
      neighbors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ActualOutNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 48: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              neighbors_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                neighbors_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualOutNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualOutNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode.class, edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode.Builder.class);
    }

    public static final int NEIGHBORS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> neighbors_;
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getNeighborsList() {
      return neighbors_;
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighborsCount() {
      return neighbors_.size();
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighbors(int index) {
      return neighbors_.get(index);
    }
    private int neighborsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getNeighborsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(neighborsMemoizedSerializedSize);
      }
      for (int i = 0; i < neighbors_.size(); i++) {
        output.writeInt32NoTag(neighbors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < neighbors_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(neighbors_.get(i));
        }
        size += dataSize;
        if (!getNeighborsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        neighborsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode)) {
        return super.equals(obj);
      }
      edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode other = (edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode) obj;

      boolean result = true;
      result = result && getNeighborsList()
          .equals(other.getNeighborsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNeighborsCount() > 0) {
        hash = (37 * hash) + NEIGHBORS_FIELD_NUMBER;
        hash = (53 * hash) + getNeighborsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code parex.graph.ActualOutNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:parex.graph.ActualOutNode)
        edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualOutNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualOutNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode.class, edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode.Builder.class);
      }

      // Construct using edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_ActualOutNode_descriptor;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode getDefaultInstanceForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode.getDefaultInstance();
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode build() {
        edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode buildPartial() {
        edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode result = new edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.neighbors_ = neighbors_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode) {
          return mergeFrom((edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode other) {
        if (other == edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode.getDefaultInstance()) return this;
        if (!other.neighbors_.isEmpty()) {
          if (neighbors_.isEmpty()) {
            neighbors_ = other.neighbors_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNeighborsIsMutable();
            neighbors_.addAll(other.neighbors_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> neighbors_ = java.util.Collections.emptyList();
      private void ensureNeighborsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          neighbors_ = new java.util.ArrayList<java.lang.Integer>(neighbors_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getNeighborsList() {
        return java.util.Collections.unmodifiableList(neighbors_);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighborsCount() {
        return neighbors_.size();
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighbors(int index) {
        return neighbors_.get(index);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder setNeighbors(
          int index, int value) {
        ensureNeighborsIsMutable();
        neighbors_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addNeighbors(int value) {
        ensureNeighborsIsMutable();
        neighbors_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addAllNeighbors(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNeighborsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, neighbors_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder clearNeighbors() {
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:parex.graph.ActualOutNode)
    }

    // @@protoc_insertion_point(class_scope:parex.graph.ActualOutNode)
    private static final edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode();
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ActualOutNode>
        PARSER = new com.google.protobuf.AbstractParser<ActualOutNode>() {
      @java.lang.Override
      public ActualOutNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActualOutNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ActualOutNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ActualOutNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.kit.joana.wala.summary.parex.GraphProto.ActualOutNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FormalOutNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:parex.graph.FormalOutNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * call node id → actual out node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
     */
    int getActualOutsCount();
    /**
     * <pre>
     * call node id → actual out node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
     */
    boolean containsActualOuts(
        int key);
    /**
     * Use {@link #getActualOutsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getActualOuts();
    /**
     * <pre>
     * call node id → actual out node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getActualOutsMap();
    /**
     * <pre>
     * call node id → actual out node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
     */

    int getActualOutsOrDefault(
        int key,
        int defaultValue);
    /**
     * <pre>
     * call node id → actual out node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
     */

    int getActualOutsOrThrow(
        int key);

    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    java.util.List<java.lang.Integer> getNeighborsList();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighborsCount();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighbors(int index);
  }
  /**
   * Protobuf type {@code parex.graph.FormalOutNode}
   */
  public  static final class FormalOutNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:parex.graph.FormalOutNode)
      FormalOutNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FormalOutNode.newBuilder() to construct.
    private FormalOutNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FormalOutNode() {
      neighbors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FormalOutNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                actualOuts_ = com.google.protobuf.MapField.newMapField(
                    ActualOutsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              actualOuts__ = input.readMessage(
                  ActualOutsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              actualOuts_.getMutableMap().put(
                  actualOuts__.getKey(), actualOuts__.getValue());
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              neighbors_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                neighbors_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalOutNode_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetActualOuts();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalOutNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode.class, edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode.Builder.class);
    }

    public static final int ACTUAL_OUTS_FIELD_NUMBER = 1;
    private static final class ActualOutsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalOutNode_ActualOutsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> actualOuts_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetActualOuts() {
      if (actualOuts_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ActualOutsDefaultEntryHolder.defaultEntry);
      }
      return actualOuts_;
    }

    public int getActualOutsCount() {
      return internalGetActualOuts().getMap().size();
    }
    /**
     * <pre>
     * call node id → actual out node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
     */

    public boolean containsActualOuts(
        int key) {
      
      return internalGetActualOuts().getMap().containsKey(key);
    }
    /**
     * Use {@link #getActualOutsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getActualOuts() {
      return getActualOutsMap();
    }
    /**
     * <pre>
     * call node id → actual out node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
     */

    public java.util.Map<java.lang.Integer, java.lang.Integer> getActualOutsMap() {
      return internalGetActualOuts().getMap();
    }
    /**
     * <pre>
     * call node id → actual out node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
     */

    public int getActualOutsOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetActualOuts().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * call node id → actual out node id
     * </pre>
     *
     * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
     */

    public int getActualOutsOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetActualOuts().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int NEIGHBORS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> neighbors_;
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getNeighborsList() {
      return neighbors_;
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighborsCount() {
      return neighbors_.size();
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighbors(int index) {
      return neighbors_.get(index);
    }
    private int neighborsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetActualOuts(),
          ActualOutsDefaultEntryHolder.defaultEntry,
          1);
      if (getNeighborsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(neighborsMemoizedSerializedSize);
      }
      for (int i = 0; i < neighbors_.size(); i++) {
        output.writeInt32NoTag(neighbors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetActualOuts().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        actualOuts__ = ActualOutsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, actualOuts__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < neighbors_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(neighbors_.get(i));
        }
        size += dataSize;
        if (!getNeighborsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        neighborsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode)) {
        return super.equals(obj);
      }
      edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode other = (edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode) obj;

      boolean result = true;
      result = result && internalGetActualOuts().equals(
          other.internalGetActualOuts());
      result = result && getNeighborsList()
          .equals(other.getNeighborsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetActualOuts().getMap().isEmpty()) {
        hash = (37 * hash) + ACTUAL_OUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetActualOuts().hashCode();
      }
      if (getNeighborsCount() > 0) {
        hash = (37 * hash) + NEIGHBORS_FIELD_NUMBER;
        hash = (53 * hash) + getNeighborsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code parex.graph.FormalOutNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:parex.graph.FormalOutNode)
        edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalOutNode_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetActualOuts();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableActualOuts();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalOutNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode.class, edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode.Builder.class);
      }

      // Construct using edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableActualOuts().clear();
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_FormalOutNode_descriptor;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode getDefaultInstanceForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode.getDefaultInstance();
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode build() {
        edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode buildPartial() {
        edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode result = new edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode(this);
        int from_bitField0_ = bitField0_;
        result.actualOuts_ = internalGetActualOuts();
        result.actualOuts_.makeImmutable();
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.neighbors_ = neighbors_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode) {
          return mergeFrom((edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode other) {
        if (other == edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode.getDefaultInstance()) return this;
        internalGetMutableActualOuts().mergeFrom(
            other.internalGetActualOuts());
        if (!other.neighbors_.isEmpty()) {
          if (neighbors_.isEmpty()) {
            neighbors_ = other.neighbors_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureNeighborsIsMutable();
            neighbors_.addAll(other.neighbors_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> actualOuts_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetActualOuts() {
        if (actualOuts_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ActualOutsDefaultEntryHolder.defaultEntry);
        }
        return actualOuts_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableActualOuts() {
        onChanged();;
        if (actualOuts_ == null) {
          actualOuts_ = com.google.protobuf.MapField.newMapField(
              ActualOutsDefaultEntryHolder.defaultEntry);
        }
        if (!actualOuts_.isMutable()) {
          actualOuts_ = actualOuts_.copy();
        }
        return actualOuts_;
      }

      public int getActualOutsCount() {
        return internalGetActualOuts().getMap().size();
      }
      /**
       * <pre>
       * call node id → actual out node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
       */

      public boolean containsActualOuts(
          int key) {
        
        return internalGetActualOuts().getMap().containsKey(key);
      }
      /**
       * Use {@link #getActualOutsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getActualOuts() {
        return getActualOutsMap();
      }
      /**
       * <pre>
       * call node id → actual out node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
       */

      public java.util.Map<java.lang.Integer, java.lang.Integer> getActualOutsMap() {
        return internalGetActualOuts().getMap();
      }
      /**
       * <pre>
       * call node id → actual out node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
       */

      public int getActualOutsOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetActualOuts().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * call node id → actual out node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
       */

      public int getActualOutsOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetActualOuts().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearActualOuts() {
        internalGetMutableActualOuts().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * call node id → actual out node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
       */

      public Builder removeActualOuts(
          int key) {
        
        internalGetMutableActualOuts().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableActualOuts() {
        return internalGetMutableActualOuts().getMutableMap();
      }
      /**
       * <pre>
       * call node id → actual out node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
       */
      public Builder putActualOuts(
          int key,
          int value) {
        
        
        internalGetMutableActualOuts().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * call node id → actual out node id
       * </pre>
       *
       * <code>map&lt;int32, int32&gt; actual_outs = 1;</code>
       */

      public Builder putAllActualOuts(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableActualOuts().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<java.lang.Integer> neighbors_ = java.util.Collections.emptyList();
      private void ensureNeighborsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          neighbors_ = new java.util.ArrayList<java.lang.Integer>(neighbors_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getNeighborsList() {
        return java.util.Collections.unmodifiableList(neighbors_);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighborsCount() {
        return neighbors_.size();
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighbors(int index) {
        return neighbors_.get(index);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder setNeighbors(
          int index, int value) {
        ensureNeighborsIsMutable();
        neighbors_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addNeighbors(int value) {
        ensureNeighborsIsMutable();
        neighbors_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addAllNeighbors(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNeighborsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, neighbors_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder clearNeighbors() {
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:parex.graph.FormalOutNode)
    }

    // @@protoc_insertion_point(class_scope:parex.graph.FormalOutNode)
    private static final edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode();
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FormalOutNode>
        PARSER = new com.google.protobuf.AbstractParser<FormalOutNode>() {
      @java.lang.Override
      public FormalOutNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FormalOutNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FormalOutNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FormalOutNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.kit.joana.wala.summary.parex.GraphProto.FormalOutNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NormalNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:parex.graph.NormalNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    java.util.List<java.lang.Integer> getNeighborsList();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighborsCount();
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    int getNeighbors(int index);
  }
  /**
   * Protobuf type {@code parex.graph.NormalNode}
   */
  public  static final class NormalNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:parex.graph.NormalNode)
      NormalNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NormalNode.newBuilder() to construct.
    private NormalNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NormalNode() {
      neighbors_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NormalNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 48: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              neighbors_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                neighbors_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                neighbors_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_NormalNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_NormalNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.kit.joana.wala.summary.parex.GraphProto.NormalNode.class, edu.kit.joana.wala.summary.parex.GraphProto.NormalNode.Builder.class);
    }

    public static final int NEIGHBORS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> neighbors_;
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public java.util.List<java.lang.Integer>
        getNeighborsList() {
      return neighbors_;
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighborsCount() {
      return neighbors_.size();
    }
    /**
     * <pre>
     * ids of neighbors
     * </pre>
     *
     * <code>repeated int32 neighbors = 6;</code>
     */
    public int getNeighbors(int index) {
      return neighbors_.get(index);
    }
    private int neighborsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getNeighborsList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(neighborsMemoizedSerializedSize);
      }
      for (int i = 0; i < neighbors_.size(); i++) {
        output.writeInt32NoTag(neighbors_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < neighbors_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(neighbors_.get(i));
        }
        size += dataSize;
        if (!getNeighborsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        neighborsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.kit.joana.wala.summary.parex.GraphProto.NormalNode)) {
        return super.equals(obj);
      }
      edu.kit.joana.wala.summary.parex.GraphProto.NormalNode other = (edu.kit.joana.wala.summary.parex.GraphProto.NormalNode) obj;

      boolean result = true;
      result = result && getNeighborsList()
          .equals(other.getNeighborsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNeighborsCount() > 0) {
        hash = (37 * hash) + NEIGHBORS_FIELD_NUMBER;
        hash = (53 * hash) + getNeighborsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.kit.joana.wala.summary.parex.GraphProto.NormalNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code parex.graph.NormalNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:parex.graph.NormalNode)
        edu.kit.joana.wala.summary.parex.GraphProto.NormalNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_NormalNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_NormalNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.kit.joana.wala.summary.parex.GraphProto.NormalNode.class, edu.kit.joana.wala.summary.parex.GraphProto.NormalNode.Builder.class);
      }

      // Construct using edu.kit.joana.wala.summary.parex.GraphProto.NormalNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_NormalNode_descriptor;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.NormalNode getDefaultInstanceForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.NormalNode.getDefaultInstance();
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.NormalNode build() {
        edu.kit.joana.wala.summary.parex.GraphProto.NormalNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.NormalNode buildPartial() {
        edu.kit.joana.wala.summary.parex.GraphProto.NormalNode result = new edu.kit.joana.wala.summary.parex.GraphProto.NormalNode(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          neighbors_ = java.util.Collections.unmodifiableList(neighbors_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.neighbors_ = neighbors_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.kit.joana.wala.summary.parex.GraphProto.NormalNode) {
          return mergeFrom((edu.kit.joana.wala.summary.parex.GraphProto.NormalNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.kit.joana.wala.summary.parex.GraphProto.NormalNode other) {
        if (other == edu.kit.joana.wala.summary.parex.GraphProto.NormalNode.getDefaultInstance()) return this;
        if (!other.neighbors_.isEmpty()) {
          if (neighbors_.isEmpty()) {
            neighbors_ = other.neighbors_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNeighborsIsMutable();
            neighbors_.addAll(other.neighbors_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.kit.joana.wala.summary.parex.GraphProto.NormalNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.kit.joana.wala.summary.parex.GraphProto.NormalNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> neighbors_ = java.util.Collections.emptyList();
      private void ensureNeighborsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          neighbors_ = new java.util.ArrayList<java.lang.Integer>(neighbors_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public java.util.List<java.lang.Integer>
          getNeighborsList() {
        return java.util.Collections.unmodifiableList(neighbors_);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighborsCount() {
        return neighbors_.size();
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public int getNeighbors(int index) {
        return neighbors_.get(index);
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder setNeighbors(
          int index, int value) {
        ensureNeighborsIsMutable();
        neighbors_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addNeighbors(int value) {
        ensureNeighborsIsMutable();
        neighbors_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder addAllNeighbors(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureNeighborsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, neighbors_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ids of neighbors
       * </pre>
       *
       * <code>repeated int32 neighbors = 6;</code>
       */
      public Builder clearNeighbors() {
        neighbors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:parex.graph.NormalNode)
    }

    // @@protoc_insertion_point(class_scope:parex.graph.NormalNode)
    private static final edu.kit.joana.wala.summary.parex.GraphProto.NormalNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.kit.joana.wala.summary.parex.GraphProto.NormalNode();
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.NormalNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NormalNode>
        PARSER = new com.google.protobuf.AbstractParser<NormalNode>() {
      @java.lang.Override
      public NormalNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NormalNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NormalNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NormalNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.kit.joana.wala.summary.parex.GraphProto.NormalNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SummaryFunctionHeaderOrBuilder extends
      // @@protoc_insertion_point(interface_extends:parex.graph.SummaryFunctionHeader)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>int32 number_of_actins = 2;</code>
     */
    int getNumberOfActins();
  }
  /**
   * Protobuf type {@code parex.graph.SummaryFunctionHeader}
   */
  public  static final class SummaryFunctionHeader extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:parex.graph.SummaryFunctionHeader)
      SummaryFunctionHeaderOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SummaryFunctionHeader.newBuilder() to construct.
    private SummaryFunctionHeader(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SummaryFunctionHeader() {
      id_ = 0;
      numberOfActins_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SummaryFunctionHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              id_ = input.readInt32();
              break;
            }
            case 16: {

              numberOfActins_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_SummaryFunctionHeader_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_SummaryFunctionHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader.class, edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader.Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int NUMBER_OF_ACTINS_FIELD_NUMBER = 2;
    private int numberOfActins_;
    /**
     * <code>int32 number_of_actins = 2;</code>
     */
    public int getNumberOfActins() {
      return numberOfActins_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeInt32(1, id_);
      }
      if (numberOfActins_ != 0) {
        output.writeInt32(2, numberOfActins_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (numberOfActins_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numberOfActins_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader)) {
        return super.equals(obj);
      }
      edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader other = (edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader) obj;

      boolean result = true;
      result = result && (getId()
          == other.getId());
      result = result && (getNumberOfActins()
          == other.getNumberOfActins());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + NUMBER_OF_ACTINS_FIELD_NUMBER;
      hash = (53 * hash) + getNumberOfActins();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code parex.graph.SummaryFunctionHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:parex.graph.SummaryFunctionHeader)
        edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_SummaryFunctionHeader_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_SummaryFunctionHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader.class, edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader.Builder.class);
      }

      // Construct using edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = 0;

        numberOfActins_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_SummaryFunctionHeader_descriptor;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader getDefaultInstanceForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader.getDefaultInstance();
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader build() {
        edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader buildPartial() {
        edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader result = new edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader(this);
        result.id_ = id_;
        result.numberOfActins_ = numberOfActins_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader) {
          return mergeFrom((edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader other) {
        if (other == edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getNumberOfActins() != 0) {
          setNumberOfActins(other.getNumberOfActins());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int id_ ;
      /**
       * <code>int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>int32 id = 1;</code>
       */
      public Builder setId(int value) {
        
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = 0;
        onChanged();
        return this;
      }

      private int numberOfActins_ ;
      /**
       * <code>int32 number_of_actins = 2;</code>
       */
      public int getNumberOfActins() {
        return numberOfActins_;
      }
      /**
       * <code>int32 number_of_actins = 2;</code>
       */
      public Builder setNumberOfActins(int value) {
        
        numberOfActins_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 number_of_actins = 2;</code>
       */
      public Builder clearNumberOfActins() {
        
        numberOfActins_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:parex.graph.SummaryFunctionHeader)
    }

    // @@protoc_insertion_point(class_scope:parex.graph.SummaryFunctionHeader)
    private static final edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader();
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SummaryFunctionHeader>
        PARSER = new com.google.protobuf.AbstractParser<SummaryFunctionHeader>() {
      @java.lang.Override
      public SummaryFunctionHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SummaryFunctionHeader(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SummaryFunctionHeader> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SummaryFunctionHeader> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.kit.joana.wala.summary.parex.GraphProto.SummaryFunctionHeader getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SummaryEdgesPerActinOrBuilder extends
      // @@protoc_insertion_point(interface_extends:parex.graph.SummaryEdgesPerActin)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 actIn = 1;</code>
     */
    int getActIn();

    /**
     * <code>repeated int32 actOuts = 2;</code>
     */
    java.util.List<java.lang.Integer> getActOutsList();
    /**
     * <code>repeated int32 actOuts = 2;</code>
     */
    int getActOutsCount();
    /**
     * <code>repeated int32 actOuts = 2;</code>
     */
    int getActOuts(int index);
  }
  /**
   * Protobuf type {@code parex.graph.SummaryEdgesPerActin}
   */
  public  static final class SummaryEdgesPerActin extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:parex.graph.SummaryEdgesPerActin)
      SummaryEdgesPerActinOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SummaryEdgesPerActin.newBuilder() to construct.
    private SummaryEdgesPerActin(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SummaryEdgesPerActin() {
      actIn_ = 0;
      actOuts_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SummaryEdgesPerActin(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              actIn_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                actOuts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              actOuts_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                actOuts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                actOuts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          actOuts_ = java.util.Collections.unmodifiableList(actOuts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_SummaryEdgesPerActin_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_SummaryEdgesPerActin_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin.class, edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin.Builder.class);
    }

    private int bitField0_;
    public static final int ACTIN_FIELD_NUMBER = 1;
    private int actIn_;
    /**
     * <code>int32 actIn = 1;</code>
     */
    public int getActIn() {
      return actIn_;
    }

    public static final int ACTOUTS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> actOuts_;
    /**
     * <code>repeated int32 actOuts = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getActOutsList() {
      return actOuts_;
    }
    /**
     * <code>repeated int32 actOuts = 2;</code>
     */
    public int getActOutsCount() {
      return actOuts_.size();
    }
    /**
     * <code>repeated int32 actOuts = 2;</code>
     */
    public int getActOuts(int index) {
      return actOuts_.get(index);
    }
    private int actOutsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (actIn_ != 0) {
        output.writeInt32(1, actIn_);
      }
      if (getActOutsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(actOutsMemoizedSerializedSize);
      }
      for (int i = 0; i < actOuts_.size(); i++) {
        output.writeInt32NoTag(actOuts_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (actIn_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, actIn_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < actOuts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(actOuts_.get(i));
        }
        size += dataSize;
        if (!getActOutsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        actOutsMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin)) {
        return super.equals(obj);
      }
      edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin other = (edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin) obj;

      boolean result = true;
      result = result && (getActIn()
          == other.getActIn());
      result = result && getActOutsList()
          .equals(other.getActOutsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ACTIN_FIELD_NUMBER;
      hash = (53 * hash) + getActIn();
      if (getActOutsCount() > 0) {
        hash = (37 * hash) + ACTOUTS_FIELD_NUMBER;
        hash = (53 * hash) + getActOutsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code parex.graph.SummaryEdgesPerActin}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:parex.graph.SummaryEdgesPerActin)
        edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActinOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_SummaryEdgesPerActin_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_SummaryEdgesPerActin_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin.class, edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin.Builder.class);
      }

      // Construct using edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        actIn_ = 0;

        actOuts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.internal_static_parex_graph_SummaryEdgesPerActin_descriptor;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin getDefaultInstanceForType() {
        return edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin.getDefaultInstance();
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin build() {
        edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin buildPartial() {
        edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin result = new edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.actIn_ = actIn_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          actOuts_ = java.util.Collections.unmodifiableList(actOuts_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.actOuts_ = actOuts_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin) {
          return mergeFrom((edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin other) {
        if (other == edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin.getDefaultInstance()) return this;
        if (other.getActIn() != 0) {
          setActIn(other.getActIn());
        }
        if (!other.actOuts_.isEmpty()) {
          if (actOuts_.isEmpty()) {
            actOuts_ = other.actOuts_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureActOutsIsMutable();
            actOuts_.addAll(other.actOuts_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int actIn_ ;
      /**
       * <code>int32 actIn = 1;</code>
       */
      public int getActIn() {
        return actIn_;
      }
      /**
       * <code>int32 actIn = 1;</code>
       */
      public Builder setActIn(int value) {
        
        actIn_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 actIn = 1;</code>
       */
      public Builder clearActIn() {
        
        actIn_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> actOuts_ = java.util.Collections.emptyList();
      private void ensureActOutsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          actOuts_ = new java.util.ArrayList<java.lang.Integer>(actOuts_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 actOuts = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getActOutsList() {
        return java.util.Collections.unmodifiableList(actOuts_);
      }
      /**
       * <code>repeated int32 actOuts = 2;</code>
       */
      public int getActOutsCount() {
        return actOuts_.size();
      }
      /**
       * <code>repeated int32 actOuts = 2;</code>
       */
      public int getActOuts(int index) {
        return actOuts_.get(index);
      }
      /**
       * <code>repeated int32 actOuts = 2;</code>
       */
      public Builder setActOuts(
          int index, int value) {
        ensureActOutsIsMutable();
        actOuts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actOuts = 2;</code>
       */
      public Builder addActOuts(int value) {
        ensureActOutsIsMutable();
        actOuts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actOuts = 2;</code>
       */
      public Builder addAllActOuts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActOutsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, actOuts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actOuts = 2;</code>
       */
      public Builder clearActOuts() {
        actOuts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:parex.graph.SummaryEdgesPerActin)
    }

    // @@protoc_insertion_point(class_scope:parex.graph.SummaryEdgesPerActin)
    private static final edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin();
    }

    public static edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SummaryEdgesPerActin>
        PARSER = new com.google.protobuf.AbstractParser<SummaryEdgesPerActin>() {
      @java.lang.Override
      public SummaryEdgesPerActin parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SummaryEdgesPerActin(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SummaryEdgesPerActin> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SummaryEdgesPerActin> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.kit.joana.wala.summary.parex.GraphProto.SummaryEdgesPerActin getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_GraphHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_GraphHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_CallNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_CallNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_FuncNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_FuncNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_ActualInNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_ActualInNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_ActualInNode_FormalInsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_ActualInNode_FormalInsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_FormalInNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_FormalInNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_FormalInNode_ActualInsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_FormalInNode_ActualInsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_ActualOutNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_ActualOutNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_FormalOutNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_FormalOutNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_FormalOutNode_ActualOutsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_FormalOutNode_ActualOutsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_NormalNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_NormalNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_SummaryFunctionHeader_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_SummaryFunctionHeader_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_parex_graph_SummaryEdgesPerActin_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_parex_graph_SummaryEdgesPerActin_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025resources/graph.proto\022\013parex.graph\"m\n\013" +
      "GraphHeader\022\r\n\005entry\030\001 \001(\005\022\027\n\017number_of_" +
      "nodes\030\002 \001(\005\022\033\n\023number_of_functions\030\003 \001(\005" +
      "\022\031\n\021node_header_bytes\030\004 \001(\005\"f\n\010CallNode\022" +
      "\022\n\nactual_ins\030\001 \003(\005\022\023\n\013actual_outs\030\002 \003(\005" +
      "\022\r\n\005owner\030\003 \001(\005\022\017\n\007targets\030\004 \003(\005\022\021\n\tneig" +
      "hbors\030\006 \003(\005\"h\n\010FuncNode\022\022\n\nformal_ins\030\001 " +
      "\003(\005\022\023\n\013formal_outs\030\002 \003(\005\022\017\n\007callees\030\003 \003(" +
      "\005\022\017\n\007callers\030\004 \003(\005\022\021\n\tneighbors\030\006 \003(\005\"\243\001" +
      "\n\014ActualInNode\022<\n\nformal_ins\030\001 \003(\0132(.par" +
      "ex.graph.ActualInNode.FormalInsEntry\022\020\n\010" +
      "callNode\030\003 \001(\005\022\021\n\tneighbors\030\006 \003(\005\0320\n\016For" +
      "malInsEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:" +
      "\0028\001\"\240\001\n\014FormalInNode\022<\n\nactual_ins\030\001 \003(\013" +
      "2(.parex.graph.FormalInNode.ActualInsEnt" +
      "ry\022\r\n\005owner\030\003 \001(\005\022\021\n\tneighbors\030\006 \003(\005\0320\n\016" +
      "ActualInsEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001" +
      "(\005:\0028\001\"\"\n\rActualOutNode\022\021\n\tneighbors\030\006 \003" +
      "(\005\"\226\001\n\rFormalOutNode\022?\n\013actual_outs\030\001 \003(" +
      "\0132*.parex.graph.FormalOutNode.ActualOuts" +
      "Entry\022\021\n\tneighbors\030\006 \003(\005\0321\n\017ActualOutsEn" +
      "try\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001\"\037\n\nN" +
      "ormalNode\022\021\n\tneighbors\030\006 \003(\005\"=\n\025SummaryF" +
      "unctionHeader\022\n\n\002id\030\001 \001(\005\022\030\n\020number_of_a" +
      "ctins\030\002 \001(\005\"6\n\024SummaryEdgesPerActin\022\r\n\005a" +
      "ctIn\030\001 \001(\005\022\017\n\007actOuts\030\002 \003(\005*\227\001\n\nNodeHead" +
      "er\022\010\n\004NONE\020\000\022\r\n\tCALL_NODE\020\001\022\r\n\tFUNC_NODE" +
      "\020\002\022\022\n\016ACTUAL_IN_NODE\020\003\022\023\n\017ACTUAL_OUT_NOD" +
      "E\020\004\022\022\n\016FORMAL_IN_NODE\020\005\022\023\n\017FORMAL_OUT_NO" +
      "DE\020\006\022\017\n\013NORMAL_NODE\020\007B.\n edu.kit.joana.w" +
      "ala.summary.parexB\nGraphProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_parex_graph_GraphHeader_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_parex_graph_GraphHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_GraphHeader_descriptor,
        new java.lang.String[] { "Entry", "NumberOfNodes", "NumberOfFunctions", "NodeHeaderBytes", });
    internal_static_parex_graph_CallNode_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_parex_graph_CallNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_CallNode_descriptor,
        new java.lang.String[] { "ActualIns", "ActualOuts", "Owner", "Targets", "Neighbors", });
    internal_static_parex_graph_FuncNode_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_parex_graph_FuncNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_FuncNode_descriptor,
        new java.lang.String[] { "FormalIns", "FormalOuts", "Callees", "Callers", "Neighbors", });
    internal_static_parex_graph_ActualInNode_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_parex_graph_ActualInNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_ActualInNode_descriptor,
        new java.lang.String[] { "FormalIns", "CallNode", "Neighbors", });
    internal_static_parex_graph_ActualInNode_FormalInsEntry_descriptor =
      internal_static_parex_graph_ActualInNode_descriptor.getNestedTypes().get(0);
    internal_static_parex_graph_ActualInNode_FormalInsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_ActualInNode_FormalInsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_parex_graph_FormalInNode_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_parex_graph_FormalInNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_FormalInNode_descriptor,
        new java.lang.String[] { "ActualIns", "Owner", "Neighbors", });
    internal_static_parex_graph_FormalInNode_ActualInsEntry_descriptor =
      internal_static_parex_graph_FormalInNode_descriptor.getNestedTypes().get(0);
    internal_static_parex_graph_FormalInNode_ActualInsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_FormalInNode_ActualInsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_parex_graph_ActualOutNode_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_parex_graph_ActualOutNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_ActualOutNode_descriptor,
        new java.lang.String[] { "Neighbors", });
    internal_static_parex_graph_FormalOutNode_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_parex_graph_FormalOutNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_FormalOutNode_descriptor,
        new java.lang.String[] { "ActualOuts", "Neighbors", });
    internal_static_parex_graph_FormalOutNode_ActualOutsEntry_descriptor =
      internal_static_parex_graph_FormalOutNode_descriptor.getNestedTypes().get(0);
    internal_static_parex_graph_FormalOutNode_ActualOutsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_FormalOutNode_ActualOutsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_parex_graph_NormalNode_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_parex_graph_NormalNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_NormalNode_descriptor,
        new java.lang.String[] { "Neighbors", });
    internal_static_parex_graph_SummaryFunctionHeader_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_parex_graph_SummaryFunctionHeader_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_SummaryFunctionHeader_descriptor,
        new java.lang.String[] { "Id", "NumberOfActins", });
    internal_static_parex_graph_SummaryEdgesPerActin_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_parex_graph_SummaryEdgesPerActin_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_parex_graph_SummaryEdgesPerActin_descriptor,
        new java.lang.String[] { "ActIn", "ActOuts", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
